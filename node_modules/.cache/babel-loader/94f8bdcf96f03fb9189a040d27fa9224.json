{"ast":null,"code":"var _jsxFileName = \"/home/maxsteel/Documents/web_projects/phoneclinic/src/Pages/CurrencyConverter/CurrencyConverter.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Toolbar from '../Toolbar/Toolbar';\nimport SideDrawer from '../Sidedrawer/Sidedrawer';\nimport FooterMain from '../Footer/FooterMain/FooterMain';\nimport bgMain from '../../Assets/Images/transfer.jpg';\nimport Aux from '../../Hoc/Aux/Aux';\nimport styles from './CurrencyConverter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  AED: 'United Arab Emirates Dirham',\n  AFN: 'Afghanistan Afghani',\n  ALL: 'Albania Lek',\n  AMD: 'Armenia Dram',\n  ANG: 'Netherlands Antilles Guilder',\n  AOA: 'Angola Kwanza',\n  ARS: 'Argentina Peso',\n  AUD: 'Australia Dollar',\n  AWG: 'Aruba Guilder',\n  AZN: 'Azerbaijan Manat',\n  BAM: 'Bosnia and Herzegovina Convertible Mark',\n  BBD: 'Barbados Dollar',\n  BDT: 'Bangladesh Taka',\n  BGN: 'Bulgaria Lev',\n  BHD: 'Bahrain Dinar',\n  BIF: 'Burundi Franc',\n  BMD: 'Bermuda Dollar',\n  BND: 'Brunei Darussalam Dollar',\n  BOB: 'Bolivia Bolíviano',\n  BRL: 'Brazil Real',\n  BSD: 'Bahamas Dollar',\n  BTC: 'Bitcoin Currency',\n  BTN: 'Bhutan Ngultrum',\n  BWP: 'Botswana Pula',\n  BYN: 'Belarus Ruble',\n  BYR: 'Belarusian Ruble',\n  BZD: 'Belize Dollar',\n  CAD: 'Canada Dollar',\n  CDF: 'Congo/Kinshasa Franc',\n  CHF: 'Switzerland Franc',\n  CLF: 'Chilean Peso',\n  CLP: 'Chile Peso',\n  CNY: 'China Yuan Renminbi',\n  COP: 'Colombia Peso',\n  CRC: 'Costa Rica Colon',\n  CUC: 'Cuba Convertible Peso',\n  CUP: 'Cuba Peso',\n  CVE: 'Cape Verde Escudo',\n  CZK: 'Czech Republic Koruna',\n  DJF: 'Djibouti Franc',\n  DKK: 'Denmark Krone',\n  DOP: 'Dominican Republic Peso',\n  DZD: 'Algeria Dinar',\n  EGP: 'Egypt Pound',\n  ERN: 'Eritrea Nakfa',\n  ETB: 'Ethiopia Birr',\n  EUR: 'Euro Member Countries',\n  FJD: 'Fiji Dollar',\n  FKP: 'Falkland Islands (Malvinas) Pound',\n  GBP: 'United Kingdom Pound',\n  GEL: 'Georgia Lari',\n  GGP: 'Guernsey Pound',\n  GHS: 'Ghana Cedi',\n  GIP: 'Gibraltar Pound',\n  GMD: 'Gambia Dalasi',\n  GNF: 'Guinea Franc',\n  GTQ: 'Guatemala Quetzal',\n  GYD: 'Guyana Dollar',\n  HKD: 'Hong Kong Dollar',\n  HNL: 'Honduras Lempira',\n  HRK: 'Croatia Kuna',\n  HTG: 'Haiti Gourde',\n  HUF: 'Hungary Forint',\n  IDR: 'Indonesia Rupiah',\n  ILS: 'Israel Shekel',\n  IMP: 'Isle of Man Pound',\n  INR: 'India Rupee',\n  IQD: 'Iraq Dinar',\n  IRR: 'Iran Rial',\n  ISK: 'Iceland Krona',\n  JEP: 'Jersey Pound',\n  JMD: 'Jamaica Dollar',\n  JOD: 'Jordan Dinar',\n  JPY: 'Japan Yen',\n  KES: 'Kenya Shilling',\n  KGS: 'Kyrgyzstan Som',\n  KHR: 'Cambodia Riel',\n  KMF: 'Comorian Franc',\n  KPW: 'Korea (North) Won',\n  KRW: 'Korea (South) Won',\n  KWD: 'Kuwait Dinar',\n  KYD: 'Cayman Islands Dollar',\n  KZT: 'Kazakhstan Tenge',\n  LAK: 'Laos Kip',\n  LBP: 'Lebanon Pound',\n  LKR: 'Sri Lanka Rupee',\n  LRD: 'Liberia Dollar',\n  LSL: 'Lesotho Loti',\n  LTL: 'Lithunian Litas',\n  LVL: 'Latvian Lats',\n  LYD: 'Libya Dinar',\n  MAD: 'Morocco Dirham',\n  MDL: 'Moldova Leu',\n  MGA: 'Madagascar Ariary',\n  MKD: 'Macedonia Denar',\n  MMK: 'Myanmar (Burma) Kyat',\n  MNT: 'Mongolia Tughrik',\n  MOP: 'Macau Pataca',\n  MRO: 'Mauritanian Ouguiya',\n  MRU: 'Mauritania Ouguiya',\n  MUR: 'Mauritius Rupee',\n  MVR: 'Maldives Rufiyaa',\n  MWK: 'Malawi Kwacha',\n  MXN: 'Mexico Peso',\n  MYR: 'Malaysia Ringgit',\n  MZN: 'Mozambique Metical',\n  NAD: 'Namibia Dollar',\n  NGN: 'Nigeria Naira',\n  NIO: 'Nicaragua Cordoba',\n  NOK: 'Norway Krone',\n  NPR: 'Nepal Rupee',\n  NZD: 'New Zealand Dollar',\n  OMR: 'Oman Rial',\n  PAB: 'Panama Balboa',\n  PEN: 'Peru Sol',\n  PGK: 'Papua New Guinea Kina',\n  PHP: 'Philippines Peso',\n  PKR: 'Pakistan Rupee',\n  PLN: 'Poland Zloty',\n  PYG: 'Paraguay Guarani',\n  QAR: 'Qatar Riyal',\n  RON: 'Romania Leu',\n  RSD: 'Serbia Dinar',\n  RUB: 'Russia Ruble',\n  RWF: 'Rwanda Franc',\n  SAR: 'Saudi Arabia Riyal',\n  SBD: 'Solomon Islands Dollar',\n  SCR: 'Seychelles Rupee',\n  SDG: 'Sudan Pound',\n  SEK: 'Sweden Krona',\n  SGD: 'Singapore Dollar',\n  SHP: 'Saint Helena Pound',\n  SLL: 'Sierra Leone Leone',\n  SOS: 'Somalia Shilling',\n  SPL: 'Seborga Luigino',\n  SRD: 'Suriname Dollar',\n  STD: 'São Tomé and Príncipe dobra',\n  STN: 'São Tomé and Príncipe Dobra',\n  SVC: 'El Salvador Colon',\n  SYP: 'Syria Pound',\n  SZL: 'eSwatini Lilangeni',\n  THB: 'Thailand Baht',\n  TJS: 'Tajikistan Somoni',\n  TMT: 'Turkmenistan Manat',\n  TND: 'Tunisia Dinar',\n  TOP: 'Tonga Pa anga',\n  TRY: 'Turkey Lira',\n  TTD: 'Trinidad and Tobago Dollar',\n  TVD: 'Tuvalu Dollar',\n  TWD: 'Taiwan New Dollar',\n  TZS: 'Tanzania Shilling',\n  UAH: 'Ukraine Hryvnia',\n  UGX: 'Uganda Shilling',\n  USD: 'United States Dollar',\n  UYU: 'Uruguay Peso',\n  UZS: 'Uzbekistan Som',\n  VEF: 'Venezuela Bolívar',\n  VND: 'Viet Nam Dong',\n  VUV: 'Vanuatu Vatu',\n  WST: 'Samoa Tala',\n  XAF: 'Central African CFA Franc',\n  XAG: 'Silver Exchange Rate (ISO)',\n  XAU: 'XAU/USD, GOLD',\n  XCD: 'East Caribbean Dollar',\n  XDR: 'IMF Special Drawing Rights',\n  XOF: 'West African CFA Franc',\n  XPF: 'Comptoirs Français du Pacifique',\n  YER: 'Yemen Rial',\n  ZAR: 'South Africa Rand',\n  ZMK: 'Zambian kwacha',\n  ZMW: 'Zambia Kwacha',\n  ZWD: 'Zimbabwe Dollar ',\n  ZWL: 'Zimbabwean dollar'\n};\n\nclass CurrencyConverter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      default: 'Select A Country',\n      rate: {},\n      selectValue: '',\n      inputValue: '',\n      queryResult: ''\n    };\n\n    this.getResult = event => {\n      this.setState({\n        inputValue: event.target.value\n      });\n    };\n\n    this.selectCountry = event => {\n      this.setState({\n        selectValue: event.target.value\n      });\n    };\n\n    this.getQuery = () => {\n      const gbp = this.state.rate.GBP;\n      const selectCountryRate = this.state.rate[this.state.selectValue];\n      let result = (selectCountryRate * this.state.inputValue / gbp).toFixed(2);\n      this.setState({\n        queryResult: result\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://api.exchangeratesapi.io/v1/latest?access_key=dda523c1f826a48326075c1671b187d3&format=1').then(res => {\n      this.setState({\n        rate: res.data.rates\n      });\n    });\n    console.log(this.state.selectValue);\n  }\n\n  render() {\n    console.log(this.state.selectValue);\n    const option = Object.keys(this.state.rate).map(item => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item,\n        children: data[item]\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        switchBar: this.props.switchBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SideDrawer, {\n        backdrop: this.props.backdrop,\n        toggleBackdrop: this.props.toggleBackdrop,\n        switch: this.props.switch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Main,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Details,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Send Money From The UK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Send money to all over the world via trusted company from our shop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.SubDetails,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.input,\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                defaultValue: \"\",\n                onChange: this.selectCountry,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  value: \"\",\n                  children: \"Select A Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 37\n                }, this), option]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: this.state.inputValue,\n                onChange: this.getResult,\n                placeholder: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.Query,\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: this.state.queryResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.getQuery,\n              children: \"Check Rates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bgMain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FooterMain, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/home/maxsteel/Documents/web_projects/phoneclinic/src/Pages/CurrencyConverter/CurrencyConverter.js"],"names":["React","Component","axios","Toolbar","SideDrawer","FooterMain","bgMain","Aux","styles","data","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTC","BTN","BWP","BYN","BYR","BZD","CAD","CDF","CHF","CLF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GGP","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JEP","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SPL","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TVD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XAG","XAU","XCD","XDR","XOF","XPF","YER","ZAR","ZMK","ZMW","ZWD","ZWL","CurrencyConverter","state","default","rate","selectValue","inputValue","queryResult","getResult","event","setState","target","value","selectCountry","getQuery","gbp","selectCountryRate","result","toFixed","componentDidMount","get","then","res","rates","console","log","render","option","Object","keys","map","item","props","switchBar","backdrop","toggleBackdrop","switch","Main","Details","SubDetails","input","Query"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Toolbar from '../Toolbar/Toolbar'\nimport SideDrawer from '../Sidedrawer/Sidedrawer';\nimport FooterMain from '../Footer/FooterMain/FooterMain'\nimport bgMain from '../../Assets/Images/transfer.jpg';\nimport Aux from '../../Hoc/Aux/Aux'\nimport styles from './CurrencyConverter.module.css';\n\nconst data = {\nAED: 'United Arab Emirates Dirham',\nAFN: 'Afghanistan Afghani',\nALL: 'Albania Lek',\nAMD: 'Armenia Dram',\nANG: 'Netherlands Antilles Guilder',\nAOA: 'Angola Kwanza',\nARS: 'Argentina Peso',\nAUD: 'Australia Dollar',\nAWG: 'Aruba Guilder',\nAZN: 'Azerbaijan Manat',\nBAM: 'Bosnia and Herzegovina Convertible Mark',\nBBD: 'Barbados Dollar',\nBDT: 'Bangladesh Taka',\nBGN: 'Bulgaria Lev',\nBHD: 'Bahrain Dinar',\nBIF: 'Burundi Franc',\nBMD: 'Bermuda Dollar',\nBND: 'Brunei Darussalam Dollar',\nBOB: 'Bolivia Bolíviano',\nBRL: 'Brazil Real',\nBSD: 'Bahamas Dollar',\nBTC: 'Bitcoin Currency',\nBTN: 'Bhutan Ngultrum',\nBWP: 'Botswana Pula',\nBYN: 'Belarus Ruble',\nBYR: 'Belarusian Ruble',\nBZD: 'Belize Dollar',\nCAD: 'Canada Dollar',\nCDF: 'Congo/Kinshasa Franc',\nCHF: 'Switzerland Franc',\nCLF: 'Chilean Peso',\nCLP: 'Chile Peso',\nCNY: 'China Yuan Renminbi',\nCOP: 'Colombia Peso',\nCRC: 'Costa Rica Colon',\nCUC: 'Cuba Convertible Peso',\nCUP: 'Cuba Peso',\nCVE: 'Cape Verde Escudo',\nCZK: 'Czech Republic Koruna',\nDJF: 'Djibouti Franc',\nDKK: 'Denmark Krone',\nDOP: 'Dominican Republic Peso',\nDZD: 'Algeria Dinar',\nEGP: 'Egypt Pound',\nERN: 'Eritrea Nakfa',\nETB: 'Ethiopia Birr',\nEUR: 'Euro Member Countries',\nFJD: 'Fiji Dollar',\nFKP: 'Falkland Islands (Malvinas) Pound',\nGBP: 'United Kingdom Pound',\nGEL: 'Georgia Lari',\nGGP: 'Guernsey Pound',\nGHS: 'Ghana Cedi',\nGIP: 'Gibraltar Pound',\nGMD: 'Gambia Dalasi',\nGNF: 'Guinea Franc',\nGTQ: 'Guatemala Quetzal',\nGYD: 'Guyana Dollar',\nHKD: 'Hong Kong Dollar',\nHNL: 'Honduras Lempira',\nHRK: 'Croatia Kuna',\nHTG: 'Haiti Gourde',\nHUF: 'Hungary Forint',\nIDR: 'Indonesia Rupiah',\nILS: 'Israel Shekel',\nIMP: 'Isle of Man Pound',\nINR: 'India Rupee',\nIQD: 'Iraq Dinar',\nIRR: 'Iran Rial',\nISK: 'Iceland Krona',\nJEP: 'Jersey Pound',\nJMD: 'Jamaica Dollar',\nJOD: 'Jordan Dinar',\nJPY: 'Japan Yen',\nKES: 'Kenya Shilling',\nKGS: 'Kyrgyzstan Som',\nKHR: 'Cambodia Riel',\nKMF: 'Comorian Franc',\nKPW: 'Korea (North) Won',\nKRW: 'Korea (South) Won',\nKWD: 'Kuwait Dinar',\nKYD: 'Cayman Islands Dollar',\nKZT: 'Kazakhstan Tenge',\nLAK: 'Laos Kip',\nLBP: 'Lebanon Pound',\nLKR: 'Sri Lanka Rupee',\nLRD: 'Liberia Dollar',\nLSL: 'Lesotho Loti',\nLTL: 'Lithunian Litas',\nLVL: 'Latvian Lats',\nLYD: 'Libya Dinar',\nMAD: 'Morocco Dirham',\nMDL: 'Moldova Leu',\nMGA: 'Madagascar Ariary',\nMKD: 'Macedonia Denar',\nMMK: 'Myanmar (Burma) Kyat',\nMNT: 'Mongolia Tughrik',\nMOP: 'Macau Pataca',\nMRO: 'Mauritanian Ouguiya',\nMRU: 'Mauritania Ouguiya',\nMUR: 'Mauritius Rupee',\nMVR: 'Maldives Rufiyaa',\nMWK: 'Malawi Kwacha',\nMXN: 'Mexico Peso',\nMYR: 'Malaysia Ringgit',\nMZN: 'Mozambique Metical',\nNAD: 'Namibia Dollar',\nNGN: 'Nigeria Naira',\nNIO: 'Nicaragua Cordoba',\nNOK: 'Norway Krone',\nNPR: 'Nepal Rupee',\nNZD: 'New Zealand Dollar',\nOMR: 'Oman Rial',\nPAB: 'Panama Balboa',\nPEN: 'Peru Sol',\nPGK: 'Papua New Guinea Kina',\nPHP: 'Philippines Peso',\nPKR: 'Pakistan Rupee',\nPLN: 'Poland Zloty',\nPYG: 'Paraguay Guarani',\nQAR: 'Qatar Riyal',\nRON: 'Romania Leu',\nRSD: 'Serbia Dinar',\nRUB: 'Russia Ruble',\nRWF: 'Rwanda Franc',\nSAR: 'Saudi Arabia Riyal',\nSBD: 'Solomon Islands Dollar',\nSCR: 'Seychelles Rupee',\nSDG: 'Sudan Pound',\nSEK: 'Sweden Krona',\nSGD: 'Singapore Dollar',\nSHP: 'Saint Helena Pound',\nSLL: 'Sierra Leone Leone',\nSOS: 'Somalia Shilling',\nSPL: 'Seborga Luigino',\nSRD: 'Suriname Dollar',\nSTD: 'São Tomé and Príncipe dobra',\nSTN: 'São Tomé and Príncipe Dobra',\nSVC: 'El Salvador Colon',\nSYP: 'Syria Pound',\nSZL: 'eSwatini Lilangeni',\nTHB: 'Thailand Baht',\nTJS: 'Tajikistan Somoni',\nTMT: 'Turkmenistan Manat',\nTND: 'Tunisia Dinar',\nTOP: 'Tonga Pa anga',\nTRY: 'Turkey Lira',\nTTD: 'Trinidad and Tobago Dollar',\nTVD: 'Tuvalu Dollar',\nTWD: 'Taiwan New Dollar',\nTZS: 'Tanzania Shilling',\nUAH: 'Ukraine Hryvnia',\nUGX: 'Uganda Shilling',\nUSD: 'United States Dollar',\nUYU: 'Uruguay Peso',\nUZS: 'Uzbekistan Som',\nVEF: 'Venezuela Bolívar',\nVND: 'Viet Nam Dong',\nVUV: 'Vanuatu Vatu',\nWST: 'Samoa Tala',\nXAF: 'Central African CFA Franc',\nXAG: 'Silver Exchange Rate (ISO)',\nXAU: 'XAU/USD, GOLD',\nXCD: 'East Caribbean Dollar',\nXDR: 'IMF Special Drawing Rights',\nXOF: 'West African CFA Franc',\nXPF: 'Comptoirs Français du Pacifique',\nYER: 'Yemen Rial',\nZAR: 'South Africa Rand',\nZMK: 'Zambian kwacha',\nZMW: 'Zambia Kwacha',\nZWD: 'Zimbabwe Dollar ',\nZWL: 'Zimbabwean dollar'\n}\n\nclass CurrencyConverter extends Component {\n\n    state = {\n        default: 'Select A Country',\n        rate: {},\n        selectValue: '',\n        inputValue: '',\n        queryResult: ''\n    }\n\n    componentDidMount () {\n        axios.get('http://api.exchangeratesapi.io/v1/latest?access_key=dda523c1f826a48326075c1671b187d3&format=1').then(res => {\n            this.setState({rate: res.data.rates})\n        })\n\n        console.log(this.state.selectValue)\n    }\n\n    getResult = (event) => {\n        this.setState({inputValue: event.target.value})\n    }\n\n    selectCountry = (event) => {\n        this.setState({selectValue: event.target.value})\n    }\n\n    getQuery = () => {\n        const gbp = this.state.rate.GBP;\n        const selectCountryRate = this.state.rate[this.state.selectValue];\n        let result = ((selectCountryRate*this.state.inputValue) / gbp).toFixed(2);\n        this.setState({queryResult: result});\n    }\n\n\n    render () {\n\n        console.log(this.state.selectValue);\n\n        \n        const option = Object.keys(this.state.rate).map(item => {\n            return <option key={item} value={item}>{data[item]}</option>\n        })\n        \n        return (\n            <Aux>\n                <Toolbar switchBar={this.props.switchBar}/>\n                <SideDrawer backdrop={this.props.backdrop} \n                            toggleBackdrop={this.props.toggleBackdrop}\n                            switch={this.props.switch} />\n                <div className={styles.Main}>\n                    <div className={styles.Details}>\n                        <h1>Send Money From The UK</h1>\n                        <h3>Send money to all over the world via trusted company from our shop</h3>\n                        <div className={styles.SubDetails}>\n                            <div className={styles.input}>\n                                <select defaultValue=\"\" onChange={this.selectCountry}>\n                                    <option disabled={true} value=\"\">Select A Country</option>\n                                    {option}\n                                </select>\n        \n                                <input type=\"text\" value={this.state.inputValue}\n                                                    onChange={this.getResult}\n                                                    placeholder='Amount'/>\n                            </div>\n                            \n                            <div className={styles.Query}>\n                                <h2>{this.state.queryResult}</h2>\n                            </div>\n                            \n                            <button onClick={this.getQuery}>Check Rates</button>\n\n                        </div>                \n                    </div>\n    \n                    <img src={bgMain} />\n    \n                </div>\n                <FooterMain />\n            </Aux>\n        )\n\n    }\n\n}\n\nexport default CurrencyConverter;\n"]},"metadata":{},"sourceType":"module"}