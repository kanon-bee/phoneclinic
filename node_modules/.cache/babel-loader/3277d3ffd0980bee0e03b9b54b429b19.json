{"ast":null,"code":"var _jsxFileName = \"/home/maxsteel/Documents/web_projects/phoneclinic/src/Pages/CurrencyConverter/CurrencyConverter.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Toolbar from '../Toolbar/Toolbar';\nimport SideDrawer from '../Sidedrawer/Sidedrawer';\nimport FooterMain from '../Footer/FooterMain/FooterMain';\nimport bgMain from '../../Assets/Images/transfer.jpg';\nimport Aux from '../../Hoc/Aux/Aux';\nimport styles from './CurrencyConverter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CurrencyConverter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      default: 'Select A Country',\n      rate: {},\n      selectValue: '',\n      inputValue: '',\n      queryResult: '',\n      data: {\n        AED: 'United Arab Emirates Dirham',\n        AFN: 'Afghanistan Afghani',\n        ALL: 'Albania Lek',\n        AMD: 'Armenia Dram',\n        ANG: 'Netherlands Antilles Guilder',\n        AOA: 'Angola Kwanza',\n        ARS: 'Argentina Peso',\n        AUD: 'Australia Dollar',\n        AWG: 'Aruba Guilder',\n        AZN: 'Azerbaijan Manat',\n        BAM: 'Bosnia and Herzegovina Convertible Mark',\n        BBD: 'Barbados Dollar',\n        BDT: 'Bangladesh Taka',\n        BGN: 'Bulgaria Lev',\n        BHD: 'Bahrain Dinar',\n        BIF: 'Burundi Franc',\n        BMD: 'Bermuda Dollar',\n        BND: 'Brunei Darussalam Dollar',\n        BOB: 'Bolivia Bolíviano',\n        BRL: 'Brazil Real',\n        BSD: 'Bahamas Dollar',\n        BTC: 'Bitcoin Currency',\n        BTN: 'Bhutan Ngultrum',\n        BWP: 'Botswana Pula',\n        BYN: 'Belarus Ruble',\n        BYR: 'Belarusian Ruble',\n        BZD: 'Belize Dollar',\n        CAD: 'Canada Dollar',\n        CDF: 'Congo/Kinshasa Franc',\n        CHF: 'Switzerland Franc',\n        CLF: 'Chilean Peso',\n        CLP: 'Chile Peso',\n        CNY: 'China Yuan Renminbi',\n        COP: 'Colombia Peso',\n        CRC: 'Costa Rica Colon',\n        CUC: 'Cuba Convertible Peso',\n        CUP: 'Cuba Peso',\n        CVE: 'Cape Verde Escudo',\n        CZK: 'Czech Republic Koruna',\n        DJF: 'Djibouti Franc',\n        DKK: 'Denmark Krone',\n        DOP: 'Dominican Republic Peso',\n        DZD: 'Algeria Dinar',\n        EGP: 'Egypt Pound',\n        ERN: 'Eritrea Nakfa',\n        ETB: 'Ethiopia Birr',\n        EUR: 'Euro Member Countries',\n        FJD: 'Fiji Dollar',\n        FKP: 'Falkland Islands (Malvinas) Pound',\n        GBP: 'United Kingdom Pound',\n        GEL: 'Georgia Lari',\n        GGP: 'Guernsey Pound',\n        GHS: 'Ghana Cedi',\n        GIP: 'Gibraltar Pound',\n        GMD: 'Gambia Dalasi',\n        GNF: 'Guinea Franc',\n        GTQ: 'Guatemala Quetzal',\n        GYD: 'Guyana Dollar',\n        HKD: 'Hong Kong Dollar',\n        HNL: 'Honduras Lempira',\n        HRK: 'Croatia Kuna',\n        HTG: 'Haiti Gourde',\n        HUF: 'Hungary Forint',\n        IDR: 'Indonesia Rupiah',\n        ILS: 'Israel Shekel',\n        IMP: 'Isle of Man Pound',\n        INR: 'India Rupee',\n        IQD: 'Iraq Dinar',\n        IRR: 'Iran Rial',\n        ISK: 'Iceland Krona',\n        JEP: 'Jersey Pound',\n        JMD: 'Jamaica Dollar',\n        JOD: 'Jordan Dinar',\n        JPY: 'Japan Yen',\n        KES: 'Kenya Shilling',\n        KGS: 'Kyrgyzstan Som',\n        KHR: 'Cambodia Riel',\n        KMF: 'Comorian Franc',\n        KPW: 'Korea (North) Won',\n        KRW: 'Korea (South) Won',\n        KWD: 'Kuwait Dinar',\n        KYD: 'Cayman Islands Dollar',\n        KZT: 'Kazakhstan Tenge',\n        LAK: 'Laos Kip',\n        LBP: 'Lebanon Pound',\n        LKR: 'Sri Lanka Rupee',\n        LRD: 'Liberia Dollar',\n        LSL: 'Lesotho Loti',\n        LTL: 'Lithunian Litas',\n        LVL: 'Latvian Lats',\n        LYD: 'Libya Dinar',\n        MAD: 'Morocco Dirham',\n        MDL: 'Moldova Leu',\n        MGA: 'Madagascar Ariary',\n        MKD: 'Macedonia Denar',\n        MMK: 'Myanmar (Burma) Kyat',\n        MNT: 'Mongolia Tughrik',\n        MOP: 'Macau Pataca',\n        MRO: 'Mauritanian Ouguiya',\n        MRU: 'Mauritania Ouguiya',\n        MUR: 'Mauritius Rupee',\n        MVR: 'Maldives Rufiyaa',\n        MWK: 'Malawi Kwacha',\n        MXN: 'Mexico Peso',\n        MYR: 'Malaysia Ringgit',\n        MZN: 'Mozambique Metical',\n        NAD: 'Namibia Dollar',\n        NGN: 'Nigeria Naira',\n        NIO: 'Nicaragua Cordoba',\n        NOK: 'Norway Krone',\n        NPR: 'Nepal Rupee',\n        NZD: 'New Zealand Dollar',\n        OMR: 'Oman Rial',\n        PAB: 'Panama Balboa',\n        PEN: 'Peru Sol',\n        PGK: 'Papua New Guinea Kina',\n        PHP: 'Philippines Peso',\n        PKR: 'Pakistan Rupee',\n        PLN: 'Poland Zloty',\n        PYG: 'Paraguay Guarani',\n        QAR: 'Qatar Riyal',\n        RON: 'Romania Leu',\n        RSD: 'Serbia Dinar',\n        RUB: 'Russia Ruble',\n        RWF: 'Rwanda Franc',\n        SAR: 'Saudi Arabia Riyal',\n        SBD: 'Solomon Islands Dollar',\n        SCR: 'Seychelles Rupee',\n        SDG: 'Sudan Pound',\n        SEK: 'Sweden Krona',\n        SGD: 'Singapore Dollar',\n        SHP: 'Saint Helena Pound',\n        SLL: 'Sierra Leone Leone',\n        SOS: 'Somalia Shilling',\n        SPL: 'Seborga Luigino',\n        SRD: 'Suriname Dollar',\n        STD: 'São Tomé and Príncipe dobra',\n        STN: 'São Tomé and Príncipe Dobra',\n        SVC: 'El Salvador Colon',\n        SYP: 'Syria Pound',\n        SZL: 'eSwatini Lilangeni',\n        THB: 'Thailand Baht',\n        TJS: 'Tajikistan Somoni',\n        TMT: 'Turkmenistan Manat',\n        TND: 'Tunisia Dinar',\n        TOP: 'Tonga Pa anga',\n        TRY: 'Turkey Lira',\n        TTD: 'Trinidad and Tobago Dollar',\n        TVD: 'Tuvalu Dollar',\n        TWD: 'Taiwan New Dollar',\n        TZS: 'Tanzania Shilling',\n        UAH: 'Ukraine Hryvnia',\n        UGX: 'Uganda Shilling',\n        USD: 'United States Dollar',\n        UYU: 'Uruguay Peso',\n        UZS: 'Uzbekistan Som',\n        VEF: 'Venezuela Bolívar',\n        VND: 'Viet Nam Dong',\n        VUV: 'Vanuatu Vatu',\n        WST: 'Samoa Tala',\n        XAF: 'Central African CFA Franc',\n        XAG: 'Silver Exchange Rate (ISO)',\n        XAU: 'XAU/USD, GOLD',\n        XCD: 'East Caribbean Dollar',\n        XDR: 'IMF Special Drawing Rights',\n        XOF: 'West African CFA Franc',\n        XPF: 'Comptoirs Français du Pacifique',\n        YER: 'Yemen Rial',\n        ZAR: 'South Africa Rand',\n        ZMK: 'Zambian kwacha',\n        ZMW: 'Zambia Kwacha',\n        ZWD: 'Zimbabwe Dollar ',\n        ZWL: 'Zimbabwean dollar'\n      }\n    };\n\n    this.getResult = event => {\n      this.setState({\n        inputValue: event.target.value\n      });\n    };\n\n    this.selectCountry = event => {\n      this.setState({\n        selectValue: event.target.value\n      });\n    };\n\n    this.getQuery = () => {\n      const gbp = this.state.rate.GBP;\n      const selectCountryRate = this.state.rate[this.state.selectValue];\n      let result = (selectCountryRate * this.state.inputValue / gbp).toFixed(2);\n      this.setState({\n        queryResult: result\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://freecurrencyapi.net/api/v2/latest?apikey=cfaac5f0-8125-11ec-ad91-b75c453dc9f3').then(res => {\n      this.setState({\n        rate: res.data.data\n      }); // console.log(res)\n    });\n    console.log(this.state.selectValue);\n  }\n\n  render() {\n    console.log(this.state.rate);\n    const option = Object.keys(this.state.rate).map(item => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item,\n        children: this.state.data[item]\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        switchBar: this.props.switchBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SideDrawer, {\n        backdrop: this.props.backdrop,\n        toggleBackdrop: this.props.toggleBackdrop,\n        switch: this.props.switch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Main,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Details,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Send Money From The UK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Send money to all over the world via trusted company from our shop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.SubDetails,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.Input,\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                defaultValue: \"\",\n                onChange: this.selectCountry,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  value: \"\",\n                  children: \"Select A Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 37\n                }, this), option]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: this.state.inputValue,\n                onChange: this.getResult,\n                placeholder: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.Query,\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: this.state.queryResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.getQuery,\n              children: \"Check Rates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Img,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: bgMain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FooterMain, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/home/maxsteel/Documents/web_projects/phoneclinic/src/Pages/CurrencyConverter/CurrencyConverter.js"],"names":["React","Component","axios","Toolbar","SideDrawer","FooterMain","bgMain","Aux","styles","CurrencyConverter","state","default","rate","selectValue","inputValue","queryResult","data","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTC","BTN","BWP","BYN","BYR","BZD","CAD","CDF","CHF","CLF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GGP","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JEP","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SPL","SRD","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TVD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XAG","XAU","XCD","XDR","XOF","XPF","YER","ZAR","ZMK","ZMW","ZWD","ZWL","getResult","event","setState","target","value","selectCountry","getQuery","gbp","selectCountryRate","result","toFixed","componentDidMount","get","then","res","console","log","render","option","Object","keys","map","item","props","switchBar","backdrop","toggleBackdrop","switch","Main","Details","SubDetails","Input","Query","Img"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Toolbar from '../Toolbar/Toolbar'\nimport SideDrawer from '../Sidedrawer/Sidedrawer';\nimport FooterMain from '../Footer/FooterMain/FooterMain'\nimport bgMain from '../../Assets/Images/transfer.jpg';\nimport Aux from '../../Hoc/Aux/Aux'\nimport styles from './CurrencyConverter.module.css';\n\n\nclass CurrencyConverter extends Component {\n\n    state = {\n        default: 'Select A Country',\n        rate: {},\n        selectValue: '',\n        inputValue: '',\n        queryResult: '',\n        data: {\n            AED: 'United Arab Emirates Dirham',\n            AFN: 'Afghanistan Afghani',\n            ALL: 'Albania Lek',\n            AMD: 'Armenia Dram',\n            ANG: 'Netherlands Antilles Guilder',\n            AOA: 'Angola Kwanza',\n            ARS: 'Argentina Peso',\n            AUD: 'Australia Dollar',\n            AWG: 'Aruba Guilder',\n            AZN: 'Azerbaijan Manat',\n            BAM: 'Bosnia and Herzegovina Convertible Mark',\n            BBD: 'Barbados Dollar',\n            BDT: 'Bangladesh Taka',\n            BGN: 'Bulgaria Lev',\n            BHD: 'Bahrain Dinar',\n            BIF: 'Burundi Franc',\n            BMD: 'Bermuda Dollar',\n            BND: 'Brunei Darussalam Dollar',\n            BOB: 'Bolivia Bolíviano',\n            BRL: 'Brazil Real',\n            BSD: 'Bahamas Dollar',\n            BTC: 'Bitcoin Currency',\n            BTN: 'Bhutan Ngultrum',\n            BWP: 'Botswana Pula',\n            BYN: 'Belarus Ruble',\n            BYR: 'Belarusian Ruble',\n            BZD: 'Belize Dollar',\n            CAD: 'Canada Dollar',\n            CDF: 'Congo/Kinshasa Franc',\n            CHF: 'Switzerland Franc',\n            CLF: 'Chilean Peso',\n            CLP: 'Chile Peso',\n            CNY: 'China Yuan Renminbi',\n            COP: 'Colombia Peso',\n            CRC: 'Costa Rica Colon',\n            CUC: 'Cuba Convertible Peso',\n            CUP: 'Cuba Peso',\n            CVE: 'Cape Verde Escudo',\n            CZK: 'Czech Republic Koruna',\n            DJF: 'Djibouti Franc',\n            DKK: 'Denmark Krone',\n            DOP: 'Dominican Republic Peso',\n            DZD: 'Algeria Dinar',\n            EGP: 'Egypt Pound',\n            ERN: 'Eritrea Nakfa',\n            ETB: 'Ethiopia Birr',\n            EUR: 'Euro Member Countries',\n            FJD: 'Fiji Dollar',\n            FKP: 'Falkland Islands (Malvinas) Pound',\n            GBP: 'United Kingdom Pound',\n            GEL: 'Georgia Lari',\n            GGP: 'Guernsey Pound',\n            GHS: 'Ghana Cedi',\n            GIP: 'Gibraltar Pound',\n            GMD: 'Gambia Dalasi',\n            GNF: 'Guinea Franc',\n            GTQ: 'Guatemala Quetzal',\n            GYD: 'Guyana Dollar',\n            HKD: 'Hong Kong Dollar',\n            HNL: 'Honduras Lempira',\n            HRK: 'Croatia Kuna',\n            HTG: 'Haiti Gourde',\n            HUF: 'Hungary Forint',\n            IDR: 'Indonesia Rupiah',\n            ILS: 'Israel Shekel',\n            IMP: 'Isle of Man Pound',\n            INR: 'India Rupee',\n            IQD: 'Iraq Dinar',\n            IRR: 'Iran Rial',\n            ISK: 'Iceland Krona',\n            JEP: 'Jersey Pound',\n            JMD: 'Jamaica Dollar',\n            JOD: 'Jordan Dinar',\n            JPY: 'Japan Yen',\n            KES: 'Kenya Shilling',\n            KGS: 'Kyrgyzstan Som',\n            KHR: 'Cambodia Riel',\n            KMF: 'Comorian Franc',\n            KPW: 'Korea (North) Won',\n            KRW: 'Korea (South) Won',\n            KWD: 'Kuwait Dinar',\n            KYD: 'Cayman Islands Dollar',\n            KZT: 'Kazakhstan Tenge',\n            LAK: 'Laos Kip',\n            LBP: 'Lebanon Pound',\n            LKR: 'Sri Lanka Rupee',\n            LRD: 'Liberia Dollar',\n            LSL: 'Lesotho Loti',\n            LTL: 'Lithunian Litas',\n            LVL: 'Latvian Lats',\n            LYD: 'Libya Dinar',\n            MAD: 'Morocco Dirham',\n            MDL: 'Moldova Leu',\n            MGA: 'Madagascar Ariary',\n            MKD: 'Macedonia Denar',\n            MMK: 'Myanmar (Burma) Kyat',\n            MNT: 'Mongolia Tughrik',\n            MOP: 'Macau Pataca',\n            MRO: 'Mauritanian Ouguiya',\n            MRU: 'Mauritania Ouguiya',\n            MUR: 'Mauritius Rupee',\n            MVR: 'Maldives Rufiyaa',\n            MWK: 'Malawi Kwacha',\n            MXN: 'Mexico Peso',\n            MYR: 'Malaysia Ringgit',\n            MZN: 'Mozambique Metical',\n            NAD: 'Namibia Dollar',\n            NGN: 'Nigeria Naira',\n            NIO: 'Nicaragua Cordoba',\n            NOK: 'Norway Krone',\n            NPR: 'Nepal Rupee',\n            NZD: 'New Zealand Dollar',\n            OMR: 'Oman Rial',\n            PAB: 'Panama Balboa',\n            PEN: 'Peru Sol',\n            PGK: 'Papua New Guinea Kina',\n            PHP: 'Philippines Peso',\n            PKR: 'Pakistan Rupee',\n            PLN: 'Poland Zloty',\n            PYG: 'Paraguay Guarani',\n            QAR: 'Qatar Riyal',\n            RON: 'Romania Leu',\n            RSD: 'Serbia Dinar',\n            RUB: 'Russia Ruble',\n            RWF: 'Rwanda Franc',\n            SAR: 'Saudi Arabia Riyal',\n            SBD: 'Solomon Islands Dollar',\n            SCR: 'Seychelles Rupee',\n            SDG: 'Sudan Pound',\n            SEK: 'Sweden Krona',\n            SGD: 'Singapore Dollar',\n            SHP: 'Saint Helena Pound',\n            SLL: 'Sierra Leone Leone',\n            SOS: 'Somalia Shilling',\n            SPL: 'Seborga Luigino',\n            SRD: 'Suriname Dollar',\n            STD: 'São Tomé and Príncipe dobra',\n            STN: 'São Tomé and Príncipe Dobra',\n            SVC: 'El Salvador Colon',\n            SYP: 'Syria Pound',\n            SZL: 'eSwatini Lilangeni',\n            THB: 'Thailand Baht',\n            TJS: 'Tajikistan Somoni',\n            TMT: 'Turkmenistan Manat',\n            TND: 'Tunisia Dinar',\n            TOP: 'Tonga Pa anga',\n            TRY: 'Turkey Lira',\n            TTD: 'Trinidad and Tobago Dollar',\n            TVD: 'Tuvalu Dollar',\n            TWD: 'Taiwan New Dollar',\n            TZS: 'Tanzania Shilling',\n            UAH: 'Ukraine Hryvnia',\n            UGX: 'Uganda Shilling',\n            USD: 'United States Dollar',\n            UYU: 'Uruguay Peso',\n            UZS: 'Uzbekistan Som',\n            VEF: 'Venezuela Bolívar',\n            VND: 'Viet Nam Dong',\n            VUV: 'Vanuatu Vatu',\n            WST: 'Samoa Tala',\n            XAF: 'Central African CFA Franc',\n            XAG: 'Silver Exchange Rate (ISO)',\n            XAU: 'XAU/USD, GOLD',\n            XCD: 'East Caribbean Dollar',\n            XDR: 'IMF Special Drawing Rights',\n            XOF: 'West African CFA Franc',\n            XPF: 'Comptoirs Français du Pacifique',\n            YER: 'Yemen Rial',\n            ZAR: 'South Africa Rand',\n            ZMK: 'Zambian kwacha',\n            ZMW: 'Zambia Kwacha',\n            ZWD: 'Zimbabwe Dollar ',\n            ZWL: 'Zimbabwean dollar'\n            }\n    }\n\n    componentDidMount () {\n        axios.get('https://freecurrencyapi.net/api/v2/latest?apikey=cfaac5f0-8125-11ec-ad91-b75c453dc9f3').then(res => {\n            this.setState({rate: res.data.data})\n            // console.log(res)\n        })\n\n        console.log(this.state.selectValue)\n    }\n\n    getResult = (event) => {\n        this.setState({inputValue: event.target.value})\n    }\n\n    selectCountry = (event) => {\n        this.setState({selectValue: event.target.value})\n    }\n\n    getQuery = () => {\n        const gbp = this.state.rate.GBP;\n        const selectCountryRate = this.state.rate[this.state.selectValue];\n        let result = ((selectCountryRate*this.state.inputValue) / gbp).toFixed(2);\n        this.setState({queryResult: result});\n    }\n\n\n    render () {\n\n        console.log(this.state.rate);\n\n        \n        const option = Object.keys(this.state.rate).map(item => {\n            return <option key={item} value={item}>{this.state.data[item]}</option>\n        })\n        \n        return (\n            <Aux>\n                <Toolbar switchBar={this.props.switchBar}/>\n                <SideDrawer backdrop={this.props.backdrop} \n                            toggleBackdrop={this.props.toggleBackdrop}\n                            switch={this.props.switch} />\n                <div className={styles.Main}>\n                    <div className={styles.Details}>\n                        <h1>Send Money From The UK</h1>\n                        <h3>Send money to all over the world via trusted company from our shop</h3>\n                        <div className={styles.SubDetails}>\n                            <div className={styles.Input}>\n                                <select defaultValue=\"\" onChange={this.selectCountry}>\n                                    <option disabled={true} value=\"\">Select A Country</option>\n                                    {option}\n                                </select>\n        \n                                <input type=\"text\" value={this.state.inputValue}\n                                                    onChange={this.getResult}\n                                                    placeholder='Amount'/>\n                            </div>\n                            \n                            <div className={styles.Query}>\n                                <h2>{this.state.queryResult}</h2>\n                            </div>\n                            \n                            <button onClick={this.getQuery}>Check Rates</button>\n\n                        </div>                \n                    </div>\n                    <div className={styles.Img}>\n                        <img src={bgMain} />\n                    </div>\n    \n                </div>\n                <FooterMain />\n            </Aux>\n        )\n\n    }\n\n}\n\nexport default CurrencyConverter;\n"]},"metadata":{},"sourceType":"module"}